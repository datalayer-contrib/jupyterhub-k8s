#!/bin/sh
# Use https://www.shellcheck.net/ to reduce mistakes if you make changes to this file.

setup_helm () {
    echo "setup helm ${HELM_VERSION}"
    curl -sf https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | DESIRED_VERSION=${HELM_VERSION} bash
}

await_pebble() {
    kubectl rollout status --watch --timeout 300s deployment/pebble \
        && kubectl rollout status --watch --timeout 300s deployment/pebble-coredns
}

await_jupyterhub() {
    kubectl rollout status --watch --timeout 300s deployment/proxy \
        && kubectl rollout status --watch --timeout 300s deployment/hub \
        && (
        if kubectl get deploy/autohttps &> /dev/null; then
            kubectl rollout status --watch --timeout 300s deployment/autohttps
        fi
    )
}

await_autohttps_tls_cert_acquisition() {
    i=0; while [ $i -ne 60 ]; do
        kubectl logs deploy/autohttps -c traefik | grep "Adding certificate" \
            && acquired_cert=true && break \
            || acquired_cert=false && sleep 0.5 && i=$((i + 1))
    done
    if [ "$acquired_cert" != "true" ]; then
        echo "Certificate acquisition failed!"
        kubectl get service,networkpolicy,configmap,pod
        kubectl describe pod -l app.kubernetes.io/name=pebble
        kubectl logs deploy/pebble --all-containers # --prefix
        kubectl describe pod -l app.kubernetes.io/name=pebble-coredns
        kubectl logs deploy/pebble-coredns --all-containers # --prefix
        kubectl describe pod -l component=autohttps
        kubectl logs deploy/autohttps --all-containers # --prefix
        exit 1
    fi
    # a precausion as pebble logs is a bad indicator of the readiness state of
    # Traefik's readiness to use the cert for TLS termination.
    sleep 1
}

await_autohttps_tls_cert_save() {
    i=0; while [ $i -ne 60 ]; do
        kubectl logs deploy/autohttps -c secret-sync | grep "Created secret" \
            && saved_cert=true && break \
            || saved_cert=false && sleep 0.5 && i=$((i + 1))
    done
    if [ "$saved_cert" != "true" ]; then
        echo "Certificate acquisition failed!"
        kubectl get service,networkpolicy,configmap,pod
        kubectl describe pod -l app.kubernetes.io/name=pebble
        kubectl logs deploy/pebble --all-containers # --prefix
        kubectl describe pod -l app.kubernetes.io/name=pebble-coredns
        kubectl logs deploy/pebble-coredns --all-containers # --prefix
        kubectl describe pod -l component=autohttps
        kubectl logs deploy/autohttps --all-containers # --prefix
        exit 1
    fi
}

setup_kubeval () {
    echo "setup kubeval ${KUBEVAL_VERSION}"
    curl -sfL https://github.com/instrumenta/kubeval/releases/download/${KUBEVAL_VERSION}/kubeval-linux-amd64.tar.gz | tar xz kubeval
    sudo mv kubeval /usr/local/bin/
}

install_and_run_chartpress_and_pebble () {
    helm repo add jupyterhub https://jupyterhub.github.io/helm-chart/
    helm repo update
    # Install a local ACME server
    helm install pebble jupyterhub/pebble --values dev-config-pebble.yaml
    # Build our images if needed and update values.yaml with the tags
    pip3 install --no-cache-dir -r dev-requirements.txt
    chartpress
    await_pebble  # jupyterhub's autohttps communicates with it as the ACME server
}
